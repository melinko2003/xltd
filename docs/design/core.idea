
Text Channel
xltd
Search

Welcome to #xltd!
This is the start of the #xltd private channel.

Add members or roles

Edit Channel

melinko2003
 
(Only you can see this channel)
January 11, 2022

melinko2003 — Today at 2:19 PM
Python Serverless implementation

$USER_ID Admin / UserID
$FUNCTION User / Project / Function / Export / Import  

How it should work ...


Python Serverless implementation

$USER_ID Admin / UserID
$FUNCTION User / Project / Function / Export / Import  

How it should work ...


Flow: 

0) Admin creates a project ( cli:$ ./xltd --mode=admin --create-project <project_name> )
1) Admin creates user(s) ( cli:$ ./xltd --mode=admin --create-user <your_email> .. )
2) Admin Updates project to contain user ( cli:$ ./xltd --mode=admin --update-project --add-user/--add-user-id <email>/<user_id> --role ( Admin | User | Svc  )
3) Admin sets role on user see Aboves example: ( Admin (R+W+X), User ( R+W ), Svc ( R+X ) )
4) Users will be forced to change password on first usage or reset. 
( cli:$ ./xltd --mode=user --update --user <email> --user-password <your_new_password> .. )
4b) Reset User 
( cli:$ ./xltd --mode=admin --update --user <email> --reset-password .. )
5) User logs in after the reset and can create a function in the "functions" pipeline

Python3 WSGI via VENV.

Functions Pipeline Work flow:

Create Function:

CHECKPOINT	Build#/CheckPoint#0 <- Init

IMPORT		GitOps		Git SCM Pull		=> $function_name 
IMPORT		WebUI		Git SCM Pull/Copy Pasta => $function_name 
IMPORT		API		RESTAPI Call		=> $function_name 
IMPORT		CLI		CLI TOOL		=> $function_name

IMPORT 		PIP		Requirements

CHECKPOINT	Build#/CheckPoint#1

OPTIONAL  ---------->

LINTED	 	Linted ( black, pylint )
LINTED	 	/opt/xltd/$project/linting		=> lcurran.dev:5001/kv_vault/linting

CHECKPOINT	Build#/CheckPoint#2

<----------

OPTIONAL  ---------->

LINTED	 	Security Check ( bandit )
LINTED	 	/opt/xltd/$project/security		=> lcurran.dev:5001/kv_vault/security

CHECKPOINT	Build#/CheckPoint#3

<----------

FUNCTION	Store/Record Linting results, security results and the function to disk
CHECKPOINT	Build#/CheckPoint#4



PREP	 	Verify function.requirements.txt against whats installed
PREP	 	Remove any items that are removed from the diff
PREP	 	Install function.requirements.txt
CHECKPOINT	Build#/CheckPoint#4

